#!/usr/bin/env bash
# Author: Dolores Portalatin <hello@doloresportalatin.info>
# Dependencies: ffmpeg, i3lock-color-git, xorg-xrandr, wmctrl (optional)
set -o errexit -o noclobber -o nounset -o pipefail

lock_file="/usr/share/i3lock-fancy-ffmpeg-multimonitor/icons/lock.png"
image_file=$(mktemp -u --suffix=.png)
trap "rm -f $image_file" EXIT
font_file=$(fc-match sans-serif --format=%{file})
greyscale=""
effect="boxblur=5:5"
desktop=""
i3lock_cmd=(i3lock -i "$image_file")

options="Options:
    -h, --help       This help menu.

    -d, --desktop    Attempt to minimize all windows before locking.

    -g, --greyscale  Set background to greyscale instead of color.

    -p, --pixelate   Pixelate the background instead of blur, runs faster.

    -f <fontname>, --font <fontname>  Set a custom font.

    -t <text>, --text <text> Set a custom text prompt.

    -l, --listfonts  Display a list of possible fonts for use with -f/--font.
                     Note: this option will not lock the screen, it displays
                     the list and exits immediately.

    -n, --nofork     Do not fork i3lock after starting."

temp="$(getopt -o :hdnpglt:f: -l desktop,help,listfonts,nofork,pixelate,greyscale,text:,font: --name "$0" -- "$@")"
eval set -- "$temp"

# l10n support
text="Type password to unlock"
case "${LANG:-}" in
    af_* ) text="Tipe wagwoord om te ontsluit" ;; # Afrikaans
    de_* ) text="Bitte Passwort eingeben" ;; # Deutsch
    da_* ) text="Indtast adgangskode" ;; # Danish
    en_* ) text="Type password to unlock" ;; # English
    es_* ) text="Ingrese su contraseña" ;; # Española
    fr_* ) text="Entrez votre mot de passe" ;; # Français
    he_* ) text="הליענה לטבל המסיס דלקה" ;; # Hebrew עברית
    id_* ) text="Masukkan kata sandi Anda" ;; # Bahasa Indonesia
    it_* ) text="Inserisci la password" ;; # Italian
    ja_* ) text="パスワードを入力してください" ;; # Japanese
    lv_* ) text="Ievadi paroli" ;; # Latvian
    nb_* ) text="Skriv inn passord" ;; # Norwegian
    pl_* ) text="Podaj hasło" ;; # Polish
    pt_* ) text="Digite a senha para desbloquear" ;; # Português
    ru_* ) text="Введите пароль" ;; # Russian
    * ) text="Type password to unlock" ;; # Default to English
esac

# arrays to hold midpoints, each index corresponds to a monitor
# when populated each array has length equal to the number of monitors
# x midpoints for the lock image and text
mid_x=()
# y midpoints for the lock image
mid_y_i=()
# y midpoints for the text
mid_y_t=()

while read line; do
    if [[ "$line" =~ current" "([0-9]+)" "x" "([0-9]+) ]]; then
        screen_res_x=${BASH_REMATCH[1]}
        screen_res_y=${BASH_REMATCH[2]}
    fi
    if [[ "$line" =~ ([0-9]+)x([0-9]+)\+([0-9]+)\+([0-9]+) ]]; then
        monitor_width=${BASH_REMATCH[1]}
        monitor_height=${BASH_REMATCH[2]}
        monitor_x_offset=${BASH_REMATCH[3]}
        monitor_y_offset=${BASH_REMATCH[4]}
        mid_x+=($(($monitor_x_offset + $monitor_width / 2)))
        mid_y_i+=($(($monitor_y_offset + $monitor_height / 2)))
        mid_y_t+=($(($monitor_y_offset + $monitor_height / 2 + 180)))
    fi
done <<< "$(xrandr)"

number_of_monitors=${#mid_x[@]}

while [ $# -gt 0 ] ; do
    case "$1" in
        -h|--help)
            printf "Usage: %s [options]\n\n%s\n\n" "${0##*/}" "$options"; exit 1 ;;
        -d|--desktop) desktop=$(command -V wmctrl) ; shift ;;
        -g|--greyscale) greyscale="format=gray," ; shift ;;
        -p|--pixelate)
          pixel_size=15
          effect="scale='iw/$pixel_size:-1', scale='$screen_res_x:$screen_res_y:flags=neighbor'" ; shift ;;
        -f|--font)
            case "$2" in
                "") shift 2 ;;
                *) font_file=$(fc-match "$2" --format=%{file}) ; shift 2 ;;
            esac ;;
        -t|--text) text=$2 ; shift 2 ;;
        -l|--listfonts)
          fc-list --format="%{family[0]}\n" | sort -u
          exit 0 ;;
        -n|--nofork) i3lock_cmd+=(--nofork) ; shift ;;
        --) shift; break ;;
        *) echo "error" ; exit 1 ;;
    esac
done

# start dynamically creating the filtergraph which will be passed to ffmpeg
filtergraph="[0:v] $greyscale $effect [out-0];"

# add lock images to filtergraph
for ((i=0; i < $number_of_monitors; ++i)); do
    filtergraph="$filtergraph [out-$i][1:v] overlay=${mid_x[i]}-overlay_w/2:${mid_y_i[i]}-overlay_h/2 [out-$((i + 1))];"
done

# add text filter to filtergraph
# this uses various drawtext filters with black and white text
text_w=800
text_h=100
filtergraph="$filtergraph \
color=color=white@0:size=${text_w}x${text_h}, \
drawtext=text='$text':x=($text_w-text_w)/2+2:y=($text_h-text_h)/2+2:fontsize=25:fontfile=$font_file:fontcolor=black, \
drawtext=text='$text':x=($text_w-text_w)/2:y=($text_h-text_h)/2:fontsize=25:fontfile=$font_file:fontcolor=black, \
boxblur=2:2 [text-blur]; \
color=color=white@0:size=${text_w}x${text_h}, \
drawtext=text='$text':x=($text_w-text_w)/2+1:y=($text_h-text_h)/2+1:fontsize=25:fontfile=$font_file:fontcolor=black, \
drawtext=text='$text':x=($text_w-text_w)/2+1:y=($text_h-text_h)/2+2:fontsize=25:fontfile=$font_file:fontcolor=black, \
drawtext=text='$text':x=($text_w-text_w)/2+2:y=($text_h-text_h)/2+2:fontsize=25:fontfile=$font_file:fontcolor=black, \
drawtext=text='$text':x=($text_w-text_w)/2:y=($text_h-text_h)/2:fontsize=25:fontfile=$font_file:fontcolor=white [text-shadow]; \
[text-blur][text-shadow] overlay [text-0];"

# duplicate the text filter into multiple filters, one per monitor
for ((i=0; i < $((number_of_monitors - 1)); ++i)); do
    filtergraph="$filtergraph [text-$i] split [text-$i][text-$((i+1))];"
done

# overlay everything together
for ((i=0; i < $number_of_monitors; ++i)); do
    filtergraph="$filtergraph [out-$((number_of_monitors + i))][text-$i] overlay=${mid_x[i]}-overlay_w/2:${mid_y_t[i]}-overlay_h/2 [out-$((number_of_monitors + i + 1))];"
done

# remove the trailing semicolon
filtergraph="${filtergraph::-1}"

ffmpeg -f x11grab -draw_mouse 0 -video_size "${screen_res_x}x${screen_res_y}" \
    -y -i $DISPLAY -i "$lock_file" -filter_complex "$filtergraph" \
    -map "[out-$((number_of_monitors * 2))]" -vframes 1 "$image_file"

# If invoked with -d/--desktop, we'll attempt to minimize all windows (ie. show
# the desktop) before locking.
${desktop} ${desktop:+-k on}

"${i3lock_cmd[@]}"

# As above, if we were passed -d/--desktop, we'll attempt to restore all windows
# after unlocking.
${desktop} ${desktop:+-k off}
